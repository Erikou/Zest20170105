{% extends "SEInputBundle:Entry:input.html.twig" %}

 {% block seinput_form %}

  <div class="well">
   {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

    {{ form_errors(form) }}

     <div class="form-group">
        {{ form_label(form.user, "User", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}
        {{ form_errors(form.user) }}
        <div class="col-sm-4">
          {{ form_widget(form.user, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    <div class="form-group">
      <div class="table-responsive">
        <table class="table table-hover table-striped">
          <thead>
            <tr>
              <th>#</th>
              <th>Employee</th>
              <th>Presence</th>
              <th>Activity Hours</th>
              <th>Comments</th>
              <th>Remove</th>
            </tr>
          </thead>
          <tbody>
            <div 
            id="entries-prototype"
            data-prototype="{{ form_row(form.input_entries.vars.prototype) | e }}">

              {% for entry in form.input_entries %}
                {{ form_widget(entry.employee) }}
                {{ form_widget(entry.presence) }}
                <div 
                  id="activity-hours-prototype"
                  data-prototype="{{ form_row(entry.vars.prototype.children['activity_hours'].vars.prototype) | e }}">
                    {% for activityhours in entry.activity_hours %}
                      {{ form_widget(activityhours.activity) }} 
                      {{ form_widget(activityhours.regularHours) }}
                      {{ form_widget(activityhours.otHours) }}
                      {{ form_widget(activityhours.otStartTime) }}
                      {{ form_widget(activityhours.otStartTime) }}
                      {{ form_widget(activityhours.otEndTime) }}
                      {{ form_widget(activityhours.team) }}
                      {{ form_widget(activityhours.shift) }}
                      {{ form_widget(activityhours.zone) }}
                      {{ form_widget(activityhours.workstation) }}
                      {{ form_row(activityhours) }}   
                    {% endfor %}
                </div>
                {{ form_widget(entry.comments) }}
                {{ form_row(entry) }}
              {% endfor %}
            </div>
          </tbody>
        </table>
      </div>
      <p>
        <a href=# id="add_entry" class="btn btn-success">
          <i class="glyphicon glyphicon-plus"></i>
        </a>
      </p>
    </div>

    <div class="form-group">
      {{ form_widget(form.save, {'attr': {'class': 'btn btn-success'}}) }}
    </div>
    
    {{ form_widget(form._token) }}
    {{ form_end(form) }}
  </div>



<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript">
  $(document).ready(function() {

    var $entryContainer = $('div#entries-prototype');
    var entryLabel = '#';
    var entryIndex = $entryContainer.find(':input').length;
  
   // var $addEntryLink = $('<a href="#" id="add_entry" class="btn btn-default">Add an entry</a>');
   // $entryContainer.append($addEntryLink);

    $('#add_entry').click(function(e) {
      entryIndex = addElement($entryContainer, entryLabel, entryIndex);
      e.preventDefault(); 
      addSubCollection($entryContainer.children('div'), entryIndex -1);
      return false;
    });

    if (entryIndex == 0) {
        for (var i = 0; i < {{ EmployeeCount }}; i++) {
          entryIndex = addElement($entryContainer, entryLabel, entryIndex);
        } 
    } else {
      $entryContainer.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    //array de ahcontainer pour chaque entry
    var $ah = {
      container : [],
      idt : []
    };
    var ahLabel = 'Activity n*';
    var $addActivityLink = [];
 
    //on initialise les index et container de chaque ah
    $entryContainer.children('div').each(function(j) {
        addSubCollection($(this), j);
    }); 

    function addElement($container, lab, i) {
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/, lab + (i+1))
          .replace(/__name__/, i));
      addDeleteLink($prototype);
      $container.append($prototype);
      i++;
      return i;
    }

    function addDeleteLink($prototype) {
      $deleteLink = $('<p><a href=# class="btn btn-danger"><i class="glyphicon glyphicon-trash"></i></a></p>');
      $prototype.append($deleteLink);
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault();
        return false;
      });
    }

    function addSubCollection($parent, j) {  // j = parent new index $parent = $entryContainer.children('div') //.last()
      
      $ah.container.push($parent.find($("div[id*='se_inputbundle_userinput_input_entries_'][id*='_activity_hours']")).last());
      $ah.idt.push($ah.container[j].find(':input').length);

      $addActivityLink.push($('<a href=# id="add_entry" class="btn btn-success"><i class="glyphicon glyphicon-plus"></i></a>'));
      $ah.container[j].append($addActivityLink[j]);

      $addActivityLink[j].click(function(e) {
        $ah.idt[j] = addElement($ah.container[j], ahLabel, $ah.idt[j]);
        e.preventDefault(); 
        return false;
      });

      if ($ah.idt[j] == 0) {
        $ah.idt[j] = addElement($ah.container[j], ahLabel, $ah.idt[j]);
      } else {
        $ah.container[j].children('div').each(function() {
          addDeleteLink($(this));
        });
      }
    }

  });

</script>

{% endblock %}